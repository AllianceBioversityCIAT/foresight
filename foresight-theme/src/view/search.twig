<header class="header" id="header">
      <div data-widget="searchbox"></div>
    </header>

    <main class="container-main">
      <div class="container-wrapper">
        <section class="container-filters">
          <div class="container-header">
            <h2>Filters</h2>

            <div data-widget="clear-filters" data-layout="desktop"></div>
            <div data-widget="results-number-mobile" data-layout="mobile"></div>
          </div>

          <div class="container-body">
            <div data-widget="impact-area"></div>
            <div data-widget="sdg"></div>
            <div data-widget="region"></div>
            <div data-widget="approach"></div>
            <div data-widget="agrifood-system"></div>
            <div data-widget="product-type"></div>
            <div data-widget="year-range"></div>
          </div>
        </section>

        <footer class="container-filters-footer" data-layout="mobile">
          <div class="container-filters-footer-button-wrapper" data-widget="clear-filters-mobile"></div>

          <div class="container-filters-footer-button-wrapper" data-widget="save-filters-mobile" data-action="close-overlay"></div>
        </footer>
      </div>

      <section class="container-results">
        <header class="container-header container-options">
          <div class="header-title" data-widget="stats"></div>
          <div class="container-option" data-widget="sort-by"></div>
          <div class="container-option" data-widget="hits-per-page"></div>
        </header>

        <div data-widget="hits"></div>
        <div class="hits-empty-state">
          <div data-widget="clear-filters-empty-state" class="hits-empty-results"></div>
        </div>

        <footer class="container-footer">
          <nav data-widget="pagination"></nav>
        </footer>
      </section>
    </main>

    <aside data-layout="mobile">
      <button class="filters-button" data-action="open-overlay">
        <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 16 14">
          <path d="M15 1H1l5.6 6.3v4.37L9.4 13V7.3z" stroke="#fff" stroke-width="1.29" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path>
        </svg>
        Filters
      </button>
    </aside>
  <div class="overlay" id="overlayRender">
    <div class="overlay__inner">
    <div class="overlay__content"><span class="spinner"></span></div>
    </div>
  </div>  
  <style>
  .overlay {
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    position: fixed;
    background: rgb(255,255,255);
    z-index:999
}

.overlay__inner {
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    position: absolute;
}

.overlay__content {
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
}

.spinner {
    width: 75px;
    height: 75px;
    display: inline-block;
    border-width: 3px;
    border-color: #c8c502;
    border-top-color: #fff;
    animation: spin 0.5s infinite linear;
    border-radius: 100%;
    border-style: solid;
}

@keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}
  </style>
  <script>
    function applyFilter(algolia_index, type, key, value){

      let url = window.location;
      let params = url.search.slice(1);
      
      if(params != ""){
        
        let result = [];
        params.split("&").forEach(function(part) {
          let item = part.split("=");
          let item_key = decodeURIComponent(item[0]);
          let item_value = decodeURIComponent(item[1]);
          if(item_key.indexOf('refinementList') > 0){
            result[item_key] = item_value;
          }else{
            if(key != 'tags.region.lvl0'){
              result[item_key] = item_value;
            }
          }
        });

        let size = Object.keys(result).length;
        let reload_page = true;
        
        for(var i=0; i < size; i++){

          let indx = Object.keys(result)[i];
  
          if(result[indx] == value && indx.indexOf(key) > 0 ){
            reload_page = false;
            break;
          }

        }

        if(reload_page == true){
          if(type == 'refinementList'){
            let n = randomNumber(10,20);
            result[algolia_index+"["+type+"]["+key+"]["+n+"]"] = decodeURIComponent(value);
          }else{
            result[algolia_index+"["+type+"]["+key+"][]"] = decodeURIComponent(value);
          }
          
          let new_url = Object.keys(result).map(function(k) {
            return encodeURIComponent(k) + '=' + encodeURIComponent(result[k])
          }).join('&');
          window.location.search = new_url;
        }

      }else{
        window.location.search = algolia_index+'['+type+']['+key+'][0]='+value;
      }
    }

    function randomNumber(min, max){
      const r = Math.random()*(max-min) + min
      return Math.floor(r)
    }
  </script>
